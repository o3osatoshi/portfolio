name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  integration:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore caches (.cache/*)
        uses: actions/cache@v4
        with:
          path: |
            **/.cache/eslint
            **/.cache/tsbuildinfo
          key: cache-${{ runner.os }}-node${{ steps.node.outputs.node-version || '20' }}-${{ hashFiles('**/tsconfig*.json') }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            cache-${{ runner.os }}-node${{ steps.node.outputs.node-version || '20' }}-
            cache-${{ runner.os }}-

      - name: Run biome, eslint and pkg
        run: pnpm style:pure

      - name: Run typecheck
        run: pnpm check:type

      - name: Build packages
        run: pnpm build

      - name: Run test
        run: pnpm check:test:cvrg -- --reporter=junit

      - name: Publish test report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          report_paths: "**/.reports/junit.xml"
          detailed_summary: true

      - name: Upload test report
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: "**/.reports/junit.xml"
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: "**/.reports/coverage/lcov.info"
          token: ${{ secrets.CODECOV_TOKEN }}
